local aes = require "resty.aes"
local str = require "resty.string"

-- 暗号化するための鍵
local key = "your_secret_key_here"

-- テキストを暗号化する関数
function encrypt(text)
    local aes_128_cbc_md5 = assert(aes:new(key, nil, aes.cipher(128, "cbc"), {iv = "1234567890123456"}))
    local encrypted = aes_128_cbc_md5:encrypt(text)
    return str.to_hex(encrypted)
end

-- 暗号化されたテキストを復号化する関数
function decrypt(encrypted_text)
    local aes_128_cbc_md5 = assert(aes:new(key, nil, aes.cipher(128, "cbc"), {iv = "1234567890123456"}))
    encrypted_text = str.from_hex(encrypted_text)
    local decrypted = aes_128_cbc_md5:decrypt(encrypted_text)
    return decrypted
end

-- 例：テキストの暗号化と復号化
local plain_text = "Your Lua code here"
print("Plain Text: ", plain_text)

local encrypted_text = encrypt(plain_text)
print("Encrypted Text: ", encrypted_text)

local decrypted_text = decrypt(encrypted_text)
print("Decrypted Text: ", decrypted_text)
