-- Wi-Fi接続をチェックする関数
function isWifiConnected()
    os.execute('ping -c 1 8.8.8.8 > /sdcard/gg_wifi_check.txt')
    local file = io.open('/sdcard/gg_wifi_check.txt', 'r')
    local result = file:read('*all')
    file:close()
    os.remove('/sdcard/gg_wifi_check.txt')
    
    if string.find(result, '1 received') then
        return true
    else
        return false
    end
end

-- 数字の設定（ここに0または1を設定してください）
maintenanceFlag = 0  -- 1をメンテナンスモード、0を通常モードとして設定
local response = gg.makeRequest("https://raw.githubusercontent.com/Hazimeteotukai/Hazimeteotukai/main/test.txt")
if response and response.content then
    maintenanceFlag = tonumber(response.content)
else
    gg.alert("メンテナンスフラグの取得に失敗しました。")
    os.exit()
end

-- Discord Webhookにエラーメッセージを送信する関数
function sendDiscordError(message)
    local webhookUrl = "https://discord.com/api/webhooks/1226442919356010546/YEjnxLekVS6PiVDOfj6yK4MoB9CaSwpDXmAvx2mXV97JOqYrZe9EZp1s7nbyhcXAJRPP"
    local payload = string.format('{"content": "%s"}', message)
    gg.makeRequest(webhookUrl, nil, payload)
end

function Main()
    -- Wi-Fi接続をチェックし、接続されていない場合は警告を表示して終了する
    if not isWifiConnected() then
        gg.alert('Wi-Fi接続がありません。スクリプトを終了します。')
        sendDiscordError('Wi-Fi接続がありません。スクリプトを終了します。')
        os.exit()
    end

    -- 数字が1の場合はメンテナンスメッセージを表示して終了
    if maintenanceFlag == 1 then
        gg.alert("メンテナンス中です。しばらくお待ちください。")
        os.exit()
    end

    -- 数字が0の場合はスクリプトを実行するオプションを表示
    if maintenanceFlag == 0 then
        local Ax = gg.choice({
            "ジャンル分けスクリプトを実行する。",
            "終了"
        }, nil, "スクリプトアクセス(更新日2024/06/11)")

        if Ax ~= nil then
            if Ax == 1 then
                local apiResponse = gg.makeRequest("https://raw.githubusercontent.com/Hazimeteotukai/Hazimeteotukai/main/%E3%82%B8%E3%83%A3%E3%83%B3%E3%83%AB%E5%88%86%E3%81%91%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88")
                if apiResponse == nil or apiResponse.content == nil then
                    gg.alert("スクリプトを取得できませんでした。")
                    sendDiscordError("スクリプトを取得できませんでした。")
                    os.exit()
                else
                    gg.alert("スクリプトを正常に取得しました。")
                end
                local success, loadedScript = pcall(load(apiResponse.content))
                if not success then
                    local errorMessage = string.format("スクリプトの読み込み中にエラーが発生しました: %s", loadedScript)
                    -- gg.alert(errorMessage)
                    sendDiscordError(errorMessage)
                    os.exit()
                end
            end

            if Ax == 2 then
                os.exit()
            end
            Lext = -1
        end
    end
end

-- メインループ
while true do
    if gg.isVisible(true) then
        Lext = 1
        gg.setVisible(false)
    end
    if Lext == 1 then
        Main()
    end
end
